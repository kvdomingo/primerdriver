{% extends 'sdm/layout.html.j2' %}

{% block title %}
    Home
{% endblock %}


{% block body %}

<!-- Landing -->
<div class="jumbotron text-center blue-grey lighten-5">
    <div class="row d-flex justify-content-center">
        <div class="col-xl-7 mb-4">
            <img src="{{ static('sdm/media/private/PrimerDriver_logo.png') }}" class="img-fluid" style="margin-top: -40px" />
        </div>
        <div class="col-xl-7 pb-2">
            <p class="card-text">
                <b>PrimerDriver</b> ties together key primer design tools and protocols to automate the design of mutagenic PCR primers. This allows input of sequences from different origins (i.e., FASTA, FASTQ, and manual input). The tool can accommodate both DNA & protein sequences to incorporate base pair insertions, deletions, and substitutions as specified by the user.
                <br /><br />
                <b>PrimerDriver</b> can design primer pairs and compute for all oligonucleotide sequences that incorporate the desired mutations. This can cater to an array of primer designs from random mutations, site-directed single mutagenesis, batch design site-directed mutagenesis, to multiple-site mutagenesis. Also, it can characterize and report user-designed primers for their reverse complement, GC content, melting temperature, molecular weights, etc. Lastly, you can choose to download the results in different file formats - HTML, fasta, and pdf.
            </p>
        </div>
    </div>
    <hr />
    <div class="pt-2">
        <p class="indigo-text font-weight-bold">GET STARTED</p>
        <button type="button" class="btn btn-indigo btn-rounded">DNA-based</button>
        <button type="button" class="btn btn-indigo btn-rounded">Protein-based</button>
    </div>
</div>

<!-- LRT Station -->
<div class="container-fluid text-center pt-5" style="height: 1000px">
    <svg width="100%" height="100%">
        {% set colors = ["#9933CC", "#0d47a1", "#00695c", "#f57f17", "#cc0000"] %}
        {% for color in colors %}
            <circle cx="50%" cy="{{ 50 + 125*loop.index0 }}" r="50" fill="{{ color }}"></circle>
        {% endfor %}
    </svg>
</div>

<script src="{{ static('sdm/js/train.js') }}"></script>

{% endblock %}
